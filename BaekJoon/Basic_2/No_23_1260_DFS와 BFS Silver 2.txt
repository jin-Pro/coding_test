import sys
from collections import deque


def dfs(start):
    print(start, end=' ')
    visit[start] = False

    for i in node[start]:
        if visit[i]:
            visit[i] = False
            dfs(i)


def bfs(start):
    q = deque()
    q.append(start)

    while q:
        target = q.popleft()
        print(target, end=" ")
        for i in node[target]:
            if visit2[i]:
                visit2[i] = False
                q.append(i)


input = sys.stdin.readline

N, M, v = map(int, input().split())

node = [[] for _ in range(N+1)]
visit = [[True] for _ in range(N+1)]
visit2 = [[True] for _ in range(N+1)]

for _ in range(M):
    a, b = map(int, input().split())
    node[a].append(b)
    node[b].append(a)

for i in range(1, N+1):
    node[i].sort()

# print(node)
visit[v] = False

dfs(v)
print()
visit2[v] = False

bfs(v)
